name: Build & Push Changed Services

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_all:
        description: Force build all services
        type: boolean
        required: false
        default: false

env:
  DOCKERHUB_USER: joincloudpros
  IMAGE_PREFIX: ecommerce

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: range
        run: |
          if [[ -n "${{ github.event.before }}" && "${{ github.event.before }}" != "0000000000000000000000000000000000000000" ]]; then
            echo "base=${{ github.event.before }}" >> "$GITHUB_OUTPUT"
          else
            echo "base=main" >> "$GITHUB_OUTPUT"
          fi
          echo "ref=${{ github.sha }}" >> "$GITHUB_OUTPUT"

      - id: paths
        uses: dorny/paths-filter@v3
        with:
          base: ${{ steps.range.outputs.base }}
          ref:  ${{ steps.range.outputs.ref }}
          filters: |
            adservice: src/adservice/**
            cartservice: src/cartservice/**
            checkoutservice: src/checkoutservice/**
            currencyservice: src/currencyservice/**
            emailservice: src/emailservice/**
            frontend: src/frontend/**
            loadgenerator: src/loadgenerator/**
            paymentservice: src/paymentservice/**
            productcatalogservice: src/productcatalogservice/**
            recommendationservice: src/recommendationservice/**
            shippingservice: src/shippingservice/**
            shoppingassistantservice: src/shoppingassistantservice/**

      - id: set_matrix
        env:
          FORCE_ALL: ${{ github.event.inputs.force_all || 'false' }}
          AD:   ${{ steps.paths.outputs.adservice }}
          CART: ${{ steps.paths.outputs.cartservice }}
          CHECKOUT: ${{ steps.paths.outputs.checkoutservice }}
          CURR: ${{ steps.paths.outputs.currencyservice }}
          EMAIL: ${{ steps.paths.outputs.emailservice }}
          FRONT: ${{ steps.paths.outputs.frontend }}
          LOAD: ${{ steps.paths.outputs.loadgenerator }}
          PAY:  ${{ steps.paths.outputs.paymentservice }}
          PROD: ${{ steps.paths.outputs.productcatalogservice }}
          RECO: ${{ steps.paths.outputs.recommendationservice }}
          SHIP: ${{ steps.paths.outputs.shippingservice }}
          SHOP: ${{ steps.paths.outputs.shoppingassistantservice }}
        run: |
          add() { printf '{"service":"%s","context":"%s","dockerfile":"%s"}' "$1" "$2" "$3"; }
          list=()
          if [ "$FORCE_ALL" = "true" ]; then
            list+=("$(add adservice src/adservice src/adservice/Dockerfile)")
            list+=("$(add cartservice src/cartservice src/cartservice/src/Dockerfile)")
            list+=("$(add checkoutservice src/checkoutservice src/checkoutservice/Dockerfile)")
            list+=("$(add currencyservice src/currencyservice src/currencyservice/Dockerfile)")
            list+=("$(add emailservice src/emailservice src/emailservice/Dockerfile)")
            list+=("$(add frontend src/frontend src/frontend/Dockerfile)")
            list+=("$(add loadgenerator src/loadgenerator src/loadgenerator/Dockerfile)")
            list+=("$(add paymentservice src/paymentservice src/paymentservice/Dockerfile)")
            list+=("$(add productcatalogservice src/productcatalogservice src/productcatalogservice/Dockerfile)")
            list+=("$(add recommendationservice src/recommendationservice src/recommendationservice/Dockerfile)")
            list+=("$(add shippingservice src/shippingservice src/shippingservice/Dockerfile)")
            list+=("$(add shoppingassistantservice src/shoppingassistantservice src/shoppingassistantservice/Dockerfile)")
          else
            [ "$AD"   = "true" ] && list+=("$(add adservice src/adservice src/adservice/Dockerfile)")
            [ "$CART" = "true" ] && list+=("$(add cartservice src/cartservice src/cartservice/src/Dockerfile)")
            [ "$CHECKOUT" = "true" ] && list+=("$(add checkoutservice src/checkoutservice src/checkoutservice/Dockerfile)")
            [ "$CURR" = "true" ] && list+=("$(add currencyservice src/currencyservice src/currencyservice/Dockerfile)")
            [ "$EMAIL" = "true" ] && list+=("$(add emailservice src/emailservice src/emailservice/Dockerfile)")
            [ "$FRONT" = "true" ] && list+=("$(add frontend src/frontend src/frontend/Dockerfile)")
            [ "$LOAD" = "true" ] && list+=("$(add loadgenerator src/loadgenerator src/loadgenerator/Dockerfile)")
            [ "$PAY"  = "true" ] && list+=("$(add paymentservice src/paymentservice src/paymentservice/Dockerfile)")
            [ "$PROD" = "true" ] && list+=("$(add productcatalogservice src/productcatalogservice src/productcatalogservice/Dockerfile)")
            [ "$RECO" = "true" ] && list+=("$(add recommendationservice src/recommendationservice src/recommendationservice/Dockerfile)")
            [ "$SHIP" = "true" ] && list+=("$(add shippingservice src/shippingservice src/shippingservice/Dockerfile)")
            [ "$SHOP" = "true" ] && list+=("$(add shoppingassistantservice src/shoppingassistantservice src/shoppingassistantservice/Dockerfile)")
          fi
          if [ ${#list[@]} -eq 0 ]; then
            echo 'matrix={"include":[]}' >> "$GITHUB_OUTPUT"
          else
            printf 'matrix={"include":[%s]}\n' "$(IFS=, ; echo "${list[*]}")" >> "$GITHUB_OUTPUT"
          fi

  build:
    needs: detect
    if: ${{ toJson(fromJson(needs.detect.outputs.matrix).include) != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: semver
        run: |
          IMAGE="${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}"
          LATEST=$(curl -fsSL "https://hub.docker.com/v2/repositories/${IMAGE}/tags/?page_size=100" \
                   | jq -r '[.results[].name | select(test("^[0-9]+\\.[0-9]+\\.[0-9]+$"))] | sort_by(split(".")|map(tonumber)) | last // ""')
          if [ -z "$LATEST" ]; then
            NEW="0.0.1"
          else
            IFS='.' read -r MAJ MIN PAT <<<"$LATEST"
            PAT=$((PAT + 1))
            NEW="${MAJ}.${MIN}.${PAT}"
          fi
          echo "version=$NEW" >> "$GITHUB_OUTPUT"

      - uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_PREFIX }}-${{ matrix.service }}:${{ steps.semver.outputs.version }}
